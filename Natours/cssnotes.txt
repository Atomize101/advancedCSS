CSS Declarations marked with !important have the highest priority
But, only use !important as a last resource. It's better to use correct specificities
inline styles will always have priority over styles in external stylesheets
a selector that contains 1 ID is more specific than one with 1000 classes
a selector that contains 1 class is more specific than one with 1000 elements
The universal selector * has no specificity value (0,0,0,0)
Rely on specificity than on the order of selectors
But, rely on order when using 3rd-party stylesheets - always put your author stylesheet last


CSS Value processing

Each property has an initial value, used if nothing is declared ( and if there is no inheritance )
Browers specify a root font-size for each page (usually 16px)
Percentages and relative values are always converted to pixels
Percentages are measured relative to their parents font-size, if used to specify font-size
Percentages are measured relative to their parents width, if used to specify lengths
em are measured relative to their parent font-size, if used to specify font-size
em are measured relative to the current font-size, if used to specify lengths
rem are always measured relative to the document's root font-size
vh and vw are simply percentage measurements of the viewport's height and width

Inheritance

Inheritance passes the values for some specific properties from parents to children - more maintainable code
Properties related to text are inherited: font-family, font-size, color, etc
The computed value of a property is what gets inherited, not the declared value
Inheritance of a property only works if no one delcares a value for that property
The inherit keyword forces inheritance on a certain property
The initial keyword resets a property to its initial value

Block-box notes

Block-level boxes
Elements formatted visually as blocks
100% of parents width
Vertically, one after another
Box-model applies as showed

display: block
(display: flex)
(display: list-item)
(display: table)

Inline-block boxes
A mix of block and inline
Occupies only contents space
No line-breaks
Box-model applies as showed

display: inline-block

Inline boxes
Content is distributed in lines
Occupies only content's space
No line-breaks
No heights and widths
Paddings and margins only horizontal (left and right)

display: inline

Positioning schemes: normal flow, absolute positioning and floats

Stacking contexts and the z-index
z-index: 3
position relative

z-index: 2
position: absolute

z-index: 1
position: relative

BEM
Block Element Modifier
Block: standalone component that is meaningful on its own
Element: part of a block that has no standalone meaning.
Modifier: a different version off a block or an element.

.block {}
.block__element {}
.block__element--modifier

The 7-1 pattern
7 different folders for partial Sass files and 1 main Sass file to import
all other files into a compiled CSS stylesheet

The 7 folders are:
base/
components/
layout/
pages/
themes/
abstracts/
vendors/
